<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>me.julb</groupId>
		<artifactId>parent</artifactId>
		<version>[1,2)</version>
	</parent>
	<groupId>me.julb</groupId>
	<artifactId>gh-action-semver-release-vars</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Julb.me :: GitHub action semver release vars</name>
	<description>This GitHub action enables to compute vars when performing a release.</description>

	<url>https://julbme.github.io/gh-action-semver-release-vars/</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git://github.com/julbme/gh-action-semver-release-vars.git</connection>
		<developerConnection>scm:git:git@github.com:julbme/gh-action-semver-release-vars.git</developerConnection>
		<url>https://github.com/julbme/gh-action-semver-release-vars</url>
	</scm>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/julbme/gh-action-semver-release-vars/issues</url>
	</issueManagement>

	<distributionManagement>
		<site>
			<id>gh-pages</id>
			<name>GitHub Pages</name>
			<url>https://julbme.github.io/gh-action-semver-release-vars/</url>
		</site>
	</distributionManagement>

	<properties>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<sonar.projectKey>julbme_gh-action-semver-release-vars</sonar.projectKey>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.kohsuke</groupId>
			<artifactId>github-api</artifactId>
		</dependency>
		<!-- compile -->
		<dependency>
			<groupId>me.julb</groupId>
			<artifactId>sdk-github-actions</artifactId>
			<version>[1,2)</version>
		</dependency>
		<dependency>
			<groupId>com.vdurmont</groupId>
			<artifactId>semver4j</artifactId>
		</dependency>

		<!-- provided -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>me.julb.Application</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>shade</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>me.julb.Application</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jreleaser</groupId>
				<artifactId>jreleaser-maven-plugin</artifactId>
				<configuration>
					<configFile>jreleaser.yml</configFile>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>change-version-patch</id>
			<activation>
				<property>
					<name>changeVersionPatch</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>update-docker-file</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<target>
										<replaceregexp file="Dockerfile" match="ARG SCM_URL.*" replace="ARG SCM_URL=${project.scm.url}" />
										<replaceregexp file="Dockerfile" match="ARG ARTIFACT_ID.*" replace="ARG ARTIFACT_ID=${project.artifactId}" />
										<replaceregexp file="Dockerfile" match="ARG VERSION.*" replace="ARG VERSION=${nextPatchVersion}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>change-version-minor</id>
			<activation>
				<property>
					<name>changeVersionMinor</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>update-docker-file</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<target>
										<replaceregexp file="Dockerfile" match="ARG SCM_URL.*" replace="ARG SCM_URL=${project.scm.url}" />
										<replaceregexp file="Dockerfile" match="ARG ARTIFACT_ID.*" replace="ARG ARTIFACT_ID=${project.artifactId}" />
										<replaceregexp file="Dockerfile" match="ARG VERSION.*" replace="ARG VERSION=${nextMinorVersion}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>change-version-major</id>
			<activation>
				<property>
					<name>changeVersionMajor</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>update-docker-file</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<target>
										<replaceregexp file="Dockerfile" match="ARG SCM_URL.*" replace="ARG SCM_URL=${project.scm.url}" />
										<replaceregexp file="Dockerfile" match="ARG ARTIFACT_ID.*" replace="ARG ARTIFACT_ID=${project.artifactId}" />
										<replaceregexp file="Dockerfile" match="ARG VERSION.*" replace="ARG VERSION=${nextMajorVersion}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>change-version-release</id>
			<activation>
				<property>
					<name>changeVersionRelease</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>update-docker-file</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<target>
										<replaceregexp file="Dockerfile" match="ARG SCM_URL.*" replace="ARG SCM_URL=${project.scm.url}" />
										<replaceregexp file="Dockerfile" match="ARG ARTIFACT_ID.*" replace="ARG ARTIFACT_ID=${project.artifactId}" />
										<replaceregexp file="Dockerfile" match="ARG VERSION.*" replace="ARG VERSION=${releaseVersion}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>change-version-custom</id>
			<activation>
				<property>
					<name>changeVersionCustom</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>update-docker-file</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<target>
										<replaceregexp file="Dockerfile" match="ARG SCM_URL.*" replace="ARG SCM_URL=${project.scm.url}" />
										<replaceregexp file="Dockerfile" match="ARG ARTIFACT_ID.*" replace="ARG ARTIFACT_ID=${project.artifactId}" />
										<replaceregexp file="Dockerfile" match="ARG VERSION.*" replace="ARG VERSION=${changeVersionCustom}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
